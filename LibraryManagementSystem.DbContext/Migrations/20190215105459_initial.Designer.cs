// <auto-generated />
using System;
using LibraryManagementSystem.DbContext.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibraryManagementSystem.DbContext.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190215105459_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LibraryManagementSystem.Models.EntityModels.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("Birthdate");

                    b.Property<string>("Country");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Organization");

                    b.Property<string>("Phone");

                    b.Property<string>("Remarks");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.EntityModels.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId");

                    b.Property<int?>("BookCategoryId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<string>("Edition");

                    b.Property<string>("Editor");

                    b.Property<string>("Isbn");

                    b.Property<int?>("LanguageId");

                    b.Property<string>("Price");

                    b.Property<int?>("PublisherId");

                    b.Property<string>("Remarks");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Subject");

                    b.Property<string>("Title");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookCategoryId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.EntityModels.BookCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("BookCategories");
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.EntityModels.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("IssueDate");

                    b.Property<int?>("MemberId");

                    b.Property<string>("Remarks");

                    b.Property<DateTime>("ReturnDate");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("MemberId");

                    b.ToTable("Issue");
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.EntityModels.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.EntityModels.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("BloodGroup");

                    b.Property<string>("Country");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("District");

                    b.Property<string>("Email");

                    b.Property<string>("NID");

                    b.Property<string>("Name");

                    b.Property<string>("Occupation");

                    b.Property<string>("Phone");

                    b.Property<string>("Religon");

                    b.Property<string>("Remarks");

                    b.Property<string>("Sex");

                    b.Property<string>("Thana");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.EntityModels.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Country");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Owner");

                    b.Property<string>("Phone");

                    b.Property<string>("Remarks");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.EntityModels.Return", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("FineAmount");

                    b.Property<int?>("MemberId");

                    b.Property<string>("Remarks");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Return");
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.EntityModels.Book", b =>
                {
                    b.HasOne("LibraryManagementSystem.Models.EntityModels.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId");

                    b.HasOne("LibraryManagementSystem.Models.EntityModels.BookCategory", "BookCategory")
                        .WithMany("Books")
                        .HasForeignKey("BookCategoryId");

                    b.HasOne("LibraryManagementSystem.Models.EntityModels.Language", "Language")
                        .WithMany("Books")
                        .HasForeignKey("LanguageId");

                    b.HasOne("LibraryManagementSystem.Models.EntityModels.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId");
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.EntityModels.Issue", b =>
                {
                    b.HasOne("LibraryManagementSystem.Models.EntityModels.Book", "Book")
                        .WithMany("Issues")
                        .HasForeignKey("BookId");

                    b.HasOne("LibraryManagementSystem.Models.EntityModels.Member", "Member")
                        .WithMany("Issues")
                        .HasForeignKey("MemberId");
                });

            modelBuilder.Entity("LibraryManagementSystem.Models.EntityModels.Return", b =>
                {
                    b.HasOne("LibraryManagementSystem.Models.EntityModels.Member", "Member")
                        .WithMany("Returns")
                        .HasForeignKey("MemberId");
                });
#pragma warning restore 612, 618
        }
    }
}
